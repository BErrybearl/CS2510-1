import java.util.*;

/**
 * A class that defines a new permutation code, as well as methods for encoding
 * and decoding of the messages that use this code.
 */
public class PermutationCode {
  // The original list of characters to be encoded
  ArrayList<Character> alphabet = new ArrayList<Character>(
      Arrays.asList('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',
          'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'));

  ArrayList<Character> code = new ArrayList<Character>(26);

  // A random number generator
  Random rand = new Random();

  // Create a new instance of the encoder/decoder with a new permutation code
  PermutationCode() {
    this.code = this.initEncoder();
  }

  // Create a new instance of the encoder/decoder with the given code
  PermutationCode(ArrayList<Character> code) {
    this.code = code;
  }

  // Initialize the encoding permutation of the characters
  ArrayList<Character> initEncoder() {
    return this.alphabet;
  }

  // produce an encoded String from the given String
  String encode(String source) {
    return "";
  }
  
  String encodeHelper(String source, )

  // produce a decoded String from the given String
  String decode(String code) {
    return this.decodeHelper(code, "");
  }

  String decodeHelper(String code, String msg) {
    if (code.equals("")) {
      return msg;
    }
    else {
      Character first = code.charAt(0);
      String rest = code.substring(1);

      if (this.alphabet.contains(first)) {
        msg = msg.concat(this.alphabet.get(this.code.indexOf(first)).toString());
      }
      else {
        msg = msg.concat(first.toString());
      }
      
      return this.decodeHelper(rest, msg);
    }
  }
}
