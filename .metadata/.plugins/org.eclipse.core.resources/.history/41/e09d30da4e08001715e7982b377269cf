// represents a Person with a user name and a list of buddies
public class Person {

  String username;
  ILoBuddy buddies;

  Person(String username) {
    this.username = username;
    this.buddies = new MTLoBuddy();
  }

  void addBuddies(Person that) {
    this.buddies = new ConsLoBuddy(that, this.buddies);
  }

  // returns true if this Person has that as a direct buddy
  boolean hasDirectBuddy(Person that) {
    return buddies.hasDirectBuddy(that);
  }

  // returns the number of people who will show up at the party
  // given by this person
  int partyCount() {
    return 1 + this.buddies.countHelper(new ConsLoBuddy(this, new MTLoBuddy()));
  }

  // returns the number of people that are direct buddies
  // of both this and that person
  int countCommonBuddies(Person that) {
    return buddies.countCommonBuddies(that);
  }

  // will the given person be invited to a party
  // organized by this person?
  boolean hasExtendedBuddy(Person that) {
    return that.buddies.hasDirectBuddy(this) || that.buddies.indrectInv(this);
  }

}
