interface ILo {
  boolean isValid();
  
  Segment startat();
}

class one implements ILo {
  Segment leg;
  
  one(Segment leg) {
    this.leg = leg;
  }

  public boolean isValid() {
    return true;
  }

  @Override
  public Segment startat() {
    return leg;
  }
  
  public Segment getfirst() {
    return this;
  }
}

class Cons implements ILo {
  Segment first;
  ILo rest;
  
  Cons(Segment first, Cons rest) {
    this.first = first;
    this.rest = rest;
  }

  @Override
  public boolean isValid() {
    if (first.endsAt().equals(rest.getfirst().startsAt())) {
      return this.rest.isValid();
    }
    else {
      return false;
    }
  }
  
  Segment getfirst() {
    return first;
  }
  
  Segment getlast() {
    return
  }

  @Override
  public Segment startat() {
    if (this.isValid()) {
      return 
    
  }
}

class Segment {
  String from;
  String to;
  
  Segment(String from, String to) {
    this.from = from;
    this.to= to;
  }
  
  String startsAt() {
    return from;
  }
  
  String endsAt() {
    return to;
  }
}